{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  cart: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const item = action.payload;\n      state.cart.push(item);\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      state.cart = state.cart.filter(item => {\n        var _item$product;\n        return (item === null || item === void 0 ? void 0 : (_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product._id) !== itemId;\n      });\n    },\n    clearCart(state) {\n      state.cart = [];\n    },\n    updateItem(state, action) {\n      const {\n        quantity,\n        product\n      } = action.payload;\n      const item = state.cart.find(item => {\n        var _item$product2;\n        return (item === null || item === void 0 ? void 0 : (_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2._id) === (product === null || product === void 0 ? void 0 : product._id);\n      });\n      if (item) {\n        item.quantity = quantity;\n      }\n    },\n    updateCartItems(state, action) {\n      state.cart = action.payload;\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  updateItem,\n  clearCart,\n  updateCartItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;\nexport const updateCartServer = async (cartItems, userId) => {\n  try {\n    await axios.put(`http://localhost:4040/api/carts/user-cart`, {\n      user: userId,\n      cartItems\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    alert(`Error: ${(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || (error === null || error === void 0 ? void 0 : error.message)}`);\n  }\n};","map":{"version":3,"names":["createSlice","axios","initialState","cart","cartSlice","name","reducers","addItem","state","action","item","payload","push","removeItem","itemId","filter","_item$product","product","_id","clearCart","updateItem","quantity","find","_item$product2","updateCartItems","actions","reducer","updateCartServer","cartItems","userId","put","user","error","_error$response","_error$response$data","alert","response","data","message"],"sources":["/Users/devangacharya/Desktop/devang_acharya_8908972/frontend/src/reducers/cartReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n  cart: [],\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const item = action.payload;\n      state.cart.push(item);\n    },\n    removeItem(state, action) {\n      const itemId = action.payload;\n      state.cart = state.cart.filter((item) => item?.product?._id !== itemId);\n    },\n    clearCart(state) {\n      state.cart = [];\n    },\n    updateItem(state, action) {\n      const { quantity, product } = action.payload;\n      const item = state.cart.find(\n        (item) => item?.product?._id === product?._id\n      );\n      if (item) {\n        item.quantity = quantity;\n      }\n    },\n    updateCartItems(state, action) {\n      state.cart = action.payload;\n    },\n  },\n});\n\nexport const { addItem, removeItem, updateItem, clearCart, updateCartItems } =\n  cartSlice.actions;\n\nexport default cartSlice.reducer;\n\nexport const updateCartServer = async (cartItems, userId) => {\n  try {\n    await axios.put(`http://localhost:4040/api/carts/user-cart`, {\n      user: userId,\n      cartItems,\n    });\n  } catch (error) {\n    alert(`Error: ${error?.response?.data?.error || error?.message}`);\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACL,IAAI,CAACS,IAAI,CAACF,IAAI,CAAC;IACvB,CAAC;IACDG,UAAUA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMK,MAAM,GAAGL,MAAM,CAACE,OAAO;MAC7BH,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACY,MAAM,CAAEL,IAAI;QAAA,IAAAM,aAAA;QAAA,OAAK,CAAAN,IAAI,aAAJA,IAAI,wBAAAM,aAAA,GAAJN,IAAI,CAAEO,OAAO,cAAAD,aAAA,uBAAbA,aAAA,CAAeE,GAAG,MAAKJ,MAAM;MAAA,EAAC;IACzE,CAAC;IACDK,SAASA,CAACX,KAAK,EAAE;MACfA,KAAK,CAACL,IAAI,GAAG,EAAE;IACjB,CAAC;IACDiB,UAAUA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAM;QAAEY,QAAQ;QAAEJ;MAAQ,CAAC,GAAGR,MAAM,CAACE,OAAO;MAC5C,MAAMD,IAAI,GAAGF,KAAK,CAACL,IAAI,CAACmB,IAAI,CACzBZ,IAAI;QAAA,IAAAa,cAAA;QAAA,OAAK,CAAAb,IAAI,aAAJA,IAAI,wBAAAa,cAAA,GAAJb,IAAI,CAAEO,OAAO,cAAAM,cAAA,uBAAbA,cAAA,CAAeL,GAAG,OAAKD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG;MAAA,CAC/C,CAAC;MACD,IAAIR,IAAI,EAAE;QACRA,IAAI,CAACW,QAAQ,GAAGA,QAAQ;MAC1B;IACF,CAAC;IACDG,eAAeA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAC7BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACE,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEM,UAAU;EAAEO,UAAU;EAAED,SAAS;EAAEK;AAAgB,CAAC,GAC1EpB,SAAS,CAACqB,OAAO;AAEnB,eAAerB,SAAS,CAACsB,OAAO;AAEhC,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EAC3D,IAAI;IACF,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,2CAA2C,EAAE;MAC3DC,IAAI,EAAEF,MAAM;MACZD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdC,KAAK,CAAC,UAAU,CAAAH,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBI,IAAI,cAAAH,oBAAA,uBAArBA,oBAAA,CAAuBF,KAAK,MAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,OAAO,GAAE,CAAC;EACnE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}